name: pr

on:
  pull_request:
    paths-ignore:
      - 'docs/**'
      - 'media/**'
      - '**/*.md'

concurrency:
  group: ${{ github.workflow }}-${{ github.event.number || github.ref }}
  cancel-in-progress: true

env:
  NX_DAEMON: false
  NX_VERBOSE_LOGGING: true
  NX_CLOUD_ACCESS_TOKEN: ${{ secrets.NX_CLOUD_ACCESS_TOKEN }}

jobs:
  test:
    name: 'Test'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: ${{ github.head_ref }}
          repository: ${{github.event.pull_request.head.repo.full_name}}
      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 8
      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version-file: .nvmrc
          cache: 'pnpm'
      - name: Install dependencies
        run: pnpm --prefer-offline install --no-frozen-lockfile
      - name: Run Tests
        uses: nick-fields/retry@v2.8.3
        with:
          command: pnpm test:lib --base=${{ github.event.pull_request.base.sha }}
          timeout_minutes: 5
          max_attempts: 3
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
  lint:
    name: 'Lint'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: ${{ github.head_ref }}
          repository: ${{github.event.pull_request.head.repo.full_name}}
      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 8
      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version-file: .nvmrc
          cache: 'pnpm'
      - name: Install dependencies
        run: pnpm --prefer-offline install --no-frozen-lockfile
      - run: pnpm run test:eslint --base=${{ github.event.pull_request.base.sha }}
  typecheck:
    name: 'Typecheck'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: ${{ github.head_ref }}
          repository: ${{github.event.pull_request.head.repo.full_name}}
      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 8
      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version-file: .nvmrc
          cache: 'pnpm'
      - name: Install dependencies
        run: pnpm --prefer-offline install --no-frozen-lockfile
      - run: pnpm run test:types --base=${{ github.event.pull_request.base.sha }}
  format:
    name: 'Format'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: ${{ github.head_ref }}
          repository: ${{github.event.pull_request.head.repo.full_name}}
      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 8
      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version-file: .nvmrc
          cache: 'pnpm'
      - name: Install dependencies
        run: pnpm --prefer-offline install --no-frozen-lockfile
      - run: pnpm run test:format --base=${{ github.event.pull_request.base.sha }}
  test-build:
    name: 'Test Build'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: ${{ github.head_ref }}
          repository: ${{github.event.pull_request.head.repo.full_name}}
      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 8
      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version-file: .nvmrc
          cache: 'pnpm'
      - name: Install dependencies
        run: pnpm --prefer-offline install --no-frozen-lockfile
      - name: Get appropriate base and head commits for `nx affected` commands
        uses: nrwl/nx-set-shas@v3
        with:
          main-branch-name: 'main'
      - run: pnpm run test:build
        env:
          BUNDLEWATCH_GITHUB_TOKEN: ${{ secrets.BUNDLEWATCH_GITHUB_TOKEN }}
